(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{492:function(t,a,v){"use strict";v.r(a);var r=v(14),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"前端性能优化基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化基础"}},[t._v("#")]),t._v(" 前端性能优化基础")]),t._v(" "),v("h2",{attrs:{id:"浏览器渲染过程api"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染过程api"}},[t._v("#")]),t._v(" 浏览器渲染过程API")]),t._v(" "),v("p",[t._v("我们参照 Navigation Timing API 来梳理以下过程")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog/navigation-timing.png",alt:"img"}})]),t._v(" "),v("h3",{attrs:{id:"prompt-for-unload-提示卸载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#prompt-for-unload-提示卸载"}},[t._v("#")]),t._v(" Prompt for unload - 提示卸载")]),t._v(" "),v("ul",[v("li",[t._v("navigationStart"),v("br"),t._v("\n当访问一个新页面时，当前页面卸载完成所返回的时间点，如果没有当前页面，则返回fetchStart时间点。")])]),t._v(" "),v("h3",{attrs:{id:"redirect-本地重定向"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#redirect-本地重定向"}},[t._v("#")]),t._v(" redirect-本地重定向")]),t._v(" "),v("ul",[v("li",[t._v("redirectStart"),v("br"),t._v("\n重定向开始时间（如果发生了HTTP重定向，每次重定向都和当前文档同域的话，就返回开始重定向的fetchStart的值。其他情况，则返回0）")]),t._v(" "),v("li",[t._v("redirectEnd"),v("br"),t._v("\n重定向结束时间（如果发生了HTTP重定向，每次重定向都和当前文档同域的话，就返回最后一次重定向接受完数据的时间。其他情况则返回0）")])]),t._v(" "),v("h3",{attrs:{id:"unload"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#unload"}},[t._v("#")]),t._v(" unload")]),t._v(" "),v("p",[t._v("如果需要重定向那么在加载缓存文件的同时会unload。")]),t._v(" "),v("ul",[v("li",[t._v("unloadStart"),v("br"),t._v("\n释放前置网页开始的时间")]),t._v(" "),v("li",[t._v("unloadEnd"),v("br"),t._v("\n释放前置网页结束的时间，有些时候释放页面会挂载一些事件，等这些事件处理完之后才能释放。在页面显示的时候会占用内存，unload会把占用的内存释放出来。")])]),t._v(" "),v("h3",{attrs:{id:"app-cache"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#app-cache"}},[t._v("#")]),t._v(" App Cache")]),t._v(" "),v("p",[t._v("本地缓存，如果加载本地缓存，那么后续流程直接跳过DNS TCP Rrequest Response 阶段。")]),t._v(" "),v("ul",[v("li",[t._v("fetchStart"),v("br"),t._v("\n浏览器发起资源请求时，如果有缓存，则返回读取缓存的开始时间")])]),t._v(" "),v("h3",{attrs:{id:"dns"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[t._v("#")]),t._v(" DNS")]),t._v(" "),v("p",[t._v("域名解析，再此阶段可以做网络优化。如何优化？")]),t._v(" "),v("ul",[v("li",[t._v("domainLookupStart"),v("br"),t._v("\n域名开始查询的时间")]),t._v(" "),v("li",[t._v("domainLookupEnd"),v("br"),t._v("\n域名结束查询的时间")])]),t._v(" "),v("h3",{attrs:{id:"tcp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[t._v("#")]),t._v(" TCP")]),t._v(" "),v("p",[t._v("得到IP地址之后，再此建立TCP连接，它有三个时间节点，这里体现的是网络质量。")]),t._v(" "),v("ul",[v("li",[t._v("connectStart"),v("br"),t._v("\n开始建立TCP请求的时间。如果请求是keep-alive，缓存等，则返回domainLookupEnd")]),t._v(" "),v("li",[t._v("secureConnectionStart - 可选"),v("br"),t._v("\n如果在进行TLS或SSL，则返回握手时间")]),t._v(" "),v("li",[t._v("connectEnd"),v("br"),t._v("\n完成TCP链接的时间。如果是keep-alive，缓存等，同connectStart")])]),t._v(" "),v("h3",{attrs:{id:"request-发起请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#request-发起请求"}},[t._v("#")]),t._v(" Request -  发起请求")]),t._v(" "),v("ul",[v("li",[t._v("requestStart"),v("br"),t._v("\n请求开始时间")]),t._v(" "),v("li",[t._v("为什么没有请求结束时间呢？"),v("br"),t._v("\n数据发送出去在网络上传输，传输时间无法计算，浏览器无法知晓服务器什么时候接收到最后一个字节的数据。")])]),t._v(" "),v("h3",{attrs:{id:"response-响应请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#response-响应请求"}},[t._v("#")]),t._v(" Response - 响应请求")]),t._v(" "),v("ul",[v("li",[t._v("responseStart"),v("br"),t._v("\n接收到服务器响应的第一个字节的时候。")]),t._v(" "),v("li",[t._v("responseEnd"),v("br"),t._v("\n接收到服务器响应的最后一个字节的时候。")])]),t._v(" "),v("h3",{attrs:{id:"processing-html处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#processing-html处理"}},[t._v("#")]),t._v(" Processing - HTML处理")]),t._v(" "),v("ul",[v("li",[t._v("domLoading"),v("br"),t._v("\n开始解析DOM的时间")]),t._v(" "),v("li",[t._v("domInteractive"),v("br"),t._v("\n解析完DOM的时间")]),t._v(" "),v("li",[t._v("domContentLoadedEventStart"),v("br"),t._v("\nDOM解析完开始加载依赖的资源（如CSS,JS）时，会触发DomContentLoadedEvent事件的时间")]),t._v(" "),v("li",[t._v("domContentLoadedEventEnd"),v("br"),t._v("\n触发DomContentLoadedEvent事件结束的时间")]),t._v(" "),v("li",[t._v("domContentLoaded"),v("br"),t._v("\n加载CSS JS完成的时间")]),t._v(" "),v("li",[t._v("domComplete"),v("br"),t._v("\nDOM树渲染完毕")])]),t._v(" "),v("h3",{attrs:{id:"onload-执行事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#onload-执行事件"}},[t._v("#")]),t._v(" onLoad - 执行事件")]),t._v(" "),v("ul",[v("li",[t._v("loadEventStart"),v("br"),t._v("\nonload事件开始的时间")]),t._v(" "),v("li",[t._v("loadEventEnd"),v("br"),t._v("\nonload事件结束的时间")])]),t._v(" "),v("h3",{attrs:{id:"优化重点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化重点"}},[t._v("#")]),t._v(" 优化重点")]),t._v(" "),v("p",[t._v("1.DNS"),v("br"),t._v("\n2.TCP"),v("br"),t._v("\n3.Response"),v("br"),t._v("\n4.Processing")]),t._v(" "),v("h2",{attrs:{id:"浏览器输入url的处理流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器输入url的处理流程"}},[t._v("#")]),t._v(" 浏览器输入URL的处理流程")]),t._v(" "),v("ul",[v("li",[t._v("输入网址并回车")]),t._v(" "),v("li",[t._v("解析域名")]),t._v(" "),v("li",[t._v("浏览器发送HTTP请求")]),t._v(" "),v("li",[t._v("服务器处理请求")]),t._v(" "),v("li",[t._v("服务器返回HTML响应")]),t._v(" "),v("li",[t._v("浏览器处理HTML页面")]),t._v(" "),v("li",[t._v("继续请求其他资源")])]),t._v(" "),v("h2",{attrs:{id:"现代浏览器渲染过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#现代浏览器渲染过程"}},[t._v("#")]),t._v(" 现代浏览器渲染过程")]),t._v(" "),v("ul",[v("li",[t._v("浏览器进化过程")]),t._v(" "),v("li",[t._v("现代浏览器的特征与结构")]),t._v(" "),v("li",[t._v("Chrome浏览器架构")]),t._v(" "),v("li",[t._v("Chrome浏览器的渲染过程")]),t._v(" "),v("li",[t._v("初探Webkit")])]),t._v(" "),v("h3",{attrs:{id:"现代浏览器的进化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#现代浏览器的进化"}},[t._v("#")]),t._v(" 现代浏览器的进化")]),t._v(" "),v("p",[t._v("1990年，蒂姆·伯纳斯·李开发了第一个网页浏览器WorldWideWeb，后改名为Nexus。WorldWideWeb浏览器支持早期的HTML标记 语言，功能比较简单，只能支持文本、简单的样式表、电影、声音、图片等资源的显示。")]),t._v(" "),v("p",[t._v("1993年，马克·安德森领导的团开发了一个真正有影响力的浏览器Mosaic，这就是后来世界上最流行的浏览器Netscape Navigator。")]),t._v(" "),v("p",[t._v("1995年，微软推出了闻名于世的浏览器Internet Explorer。"),v("strong",[t._v("第一次浏览器大战开始，持续两年")])]),t._v(" "),v("p",[t._v("1998年，Netscape公司开放Netscape Navigator源代码，成立了Mozilla基金会。"),v("strong",[t._v("第二次浏览器大战开始，持续八年")])]),t._v(" "),v("p",[t._v("2003年，苹果公司发布了Safari浏览器。")]),t._v(" "),v("p",[t._v("2004年，Netscape公司发布了著名的开源浏览器Mozilla Firefox。")]),t._v(" "),v("p",[t._v("2005年，苹果公司开源了浏览器中的核心代码，基于此发起了一个新的开源项目WebKit(Safari浏览器的内核)。")]),t._v(" "),v("p",[t._v("2008年， Google公司已WebKit为内核，创建了一个新的浏览器项目Chromium。以Chromium为基础，谷歌发布了Chrome浏览器。 至于这两者的关系，可以简单地理解为:Chromium为实验版，具有众多新特性;Chrome为稳定版。")]),t._v(" "),v("h3",{attrs:{id:"现代浏览器的特征"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#现代浏览器的特征"}},[t._v("#")]),t._v(" 现代浏览器的特征")])])}),[],!1,null,null,null);a.default=_.exports}}]);