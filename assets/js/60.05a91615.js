(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{488:function(t,v,_){"use strict";_.r(v);var a=_(14),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"https协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https协议"}},[t._v("#")]),t._v(" HTTPS协议")]),t._v(" "),_("ul",[_("li",[t._v("HTTPS 简介")]),t._v(" "),_("li",[t._v("HTTPS 的工作原理")]),t._v(" "),_("li",[t._v("总结\n")])]),t._v(" "),_("h2",{attrs:{id:"https-简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https-简介"}},[t._v("#")]),t._v(" HTTPS 简介")]),t._v(" "),_("p",[t._v("超文本传输安全协议（英语：Hypertext Transfer Protocol Secure），是一种网络安全传输协议。  是以安全为目标的HTTP通道，简单讲是HTTP的安全版。")]),t._v(" "),_("h3",{attrs:{id:"为什么https是安全的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么https是安全的"}},[t._v("#")]),t._v(" 为什么HTTPS是安全的？")]),t._v(" "),_("p",[t._v("HTTPS 采用对称加密和 非对称加密结合的方式来保护浏览器和服务端之间的通信安全。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("对称加密算法加密数据")]),t._v(" + "),_("code",[t._v("非对称加密算法交换密钥")]),t._v("+ "),_("code",[t._v("数字证书验证身份")]),t._v(" = 安全")])]),t._v(" "),_("h3",{attrs:{id:"组成部分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组成部分"}},[t._v("#")]),t._v(" 组成部分")]),t._v(" "),_("p",[t._v("HTTPS 其实是由 "),_("code",[t._v("HTTP + SSL/TLS")]),t._v(" 两部分组成，也就是在HTTP上又加了一层处理加密信息的模块。服务端和客户端的信息传输都会通过TLS进行加密，所以传输数据都是加密后的数据。")]),t._v(" "),_("h3",{attrs:{id:"传统的http协议通信"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#传统的http协议通信"}},[t._v("#")]),t._v(" 传统的HTTP协议通信")]),t._v(" "),_("p",[t._v("传统的HTTP报文是直接将报文信息传输到TCP然后TCP再通过TCP套接字发送到目标主机上。")]),t._v(" "),_("h3",{attrs:{id:"https协议通信"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https协议通信"}},[t._v("#")]),t._v(" HTTPS协议通信")]),t._v(" "),_("p",[t._v("HTTPS 是HTTP报文直接将报文信息传输给SSL套接字进行加密，SSL加密后将加密后的报文发送给TCP套接字，然后TCP套接字再将再将加密后的报文发送给目标主机，目标主机将通过TCP套接字获取加密后的报文给SSL套接字，SSL解密后交给对应进程。")]),t._v(" "),_("blockquote",[_("p",[t._v("HTTP报文 -> SSL套接字加密 -> TCP套接字 -> 目标主机 -> 通过TCP套接字传递给SSL -> SSL解密后交给对应进程")])]),t._v(" "),_("h2",{attrs:{id:"https-工作原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https-工作原理"}},[t._v("#")]),t._v(" HTTPS 工作原理")]),t._v(" "),_("p",[t._v("HTTPS在传输数据之前需要客户端（浏览器）与服务端（网站）之间进行一次握手，在握手过程中将确立双方加密传输数据的密码信息。TLS/SSL协议不仅仅是一套加密传输的协议，更是一件经过艺术家精心设计的艺术品，TLS/SSL中使用了非对称加密，对称加密以及HASH算法。握手过程的具体描述如下：")]),t._v(" "),_("ul",[_("li",[t._v("浏览器将自己支持的一套加密规则发送给网站。")]),t._v(" "),_("li",[t._v("网站从中选出一组加密算法与HASH算法，并将自己的身份信息以证书的形式发回给浏览器。证书里面包含了网站地址，加密公钥，以及证书的颁发机构等信息。")]),t._v(" "),_("li",[t._v("浏览器获得网站证书之后浏览器要做以下工作：\n"),_("ul",[_("li",[t._v("验证证书的合法性（颁发证书的机构是否合法，证书中包含的网站地址是否与正在访问的地址一致等），如果证书受信任，则浏览器栏里面会显示一个小锁头，否则会给出证书不受信的提示。")]),t._v(" "),_("li",[t._v("如果证书受信任，或者是用户接受了不受信的证书，浏览器会生成一串随机数的密码，并用证书中提供的公钥加密。")]),t._v(" "),_("li",[t._v("使用约定好的HASH算法计算握手消息，并使用生成的随机数对消息进行加密，最后将之前生成的所有信息发送给网站。")])])]),t._v(" "),_("li",[t._v("网站接收浏览器发来的数据之后要做以下的操作：\n"),_("ul",[_("li",[t._v("使用自己的私钥将信息解密取出密码，使用密码解密浏览器发来的握手消息，并验证HASH是否与浏览器发来的一致。")]),t._v(" "),_("li",[t._v("使用密码加密一段握手消息，发送给浏览器。")])])]),t._v(" "),_("li",[t._v("浏览器解密并计算握手消息的HASH，如果与服务端发来的HASH一致，此时握手过程结束，之后所有的通信数据将由之前浏览器生成的随机密码并利用对称加密算法进行加密。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);