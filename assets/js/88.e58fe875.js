(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{517:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"eslint工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint工具"}},[s._v("#")]),s._v(" ESlint工具")]),s._v(" "),a("h2",{attrs:{id:"eslint-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-安装"}},[s._v("#")]),s._v(" ESlint 安装")]),s._v(" "),a("ul",[a("li",[s._v("安装 ESLint 模块为开发依赖 npm i eslint --save-dev or yarn add eslint --dev")]),s._v(" "),a("li",[s._v("通过 CLI 命令验证安装结果 npm run eslint -v or npx eslint -v or yarn eslint -v")])]),s._v(" "),a("h2",{attrs:{id:"eslint-初始化配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-初始化配置"}},[s._v("#")]),s._v(" ESlint 初始化配置")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("npx eslint --init\n")])])]),a("h4",{attrs:{id:"如何使用eslink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用eslink"}},[s._v("#")]),s._v(" 如何使用ESLink")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("How would you like to use ESLint? \n  To check syntax only "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只检查语法性错误")]),s._v("\n  To check syntax and "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" problems "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查语法错误并且发现问题代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" To check syntax, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" problems, and enforce code style "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查语法错误，发现问题代码，校验代码风格")]),s._v("\n")])])]),a("p",[s._v("项目开发中，建议选择第三种。")]),s._v(" "),a("h4",{attrs:{id:"项目代码中使用哪种模块发方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目代码中使用哪种模块发方式"}},[s._v("#")]),s._v(" 项目代码中使用哪种模块发方式?")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("What "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" of modules dos your project use? \n  JavaScript modules "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("import/export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ESM：允许使用import/export")]),s._v("\n  CommonJS "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("require/exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CommonJS：允许使用require/exports")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" None of these "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 没有用到任何模块化")]),s._v("\n")])])]),a("p",[s._v("这个问题决定代码当中是否允许使用或调用指定的语法。")]),s._v(" "),a("h4",{attrs:{id:"当前项目使用的那款框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当前项目使用的那款框架"}},[s._v("#")]),s._v(" 当前项目使用的那款框架?")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Which framework does you project use?\n  React\n  Vue.js\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" None of these\n")])])]),a("h4",{attrs:{id:"项目是否使用了typescript-本例选择no"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目是否使用了typescript-本例选择no"}},[s._v("#")]),s._v(" 项目是否使用了TypeScript，本例选择No?")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Does your project use TypeScript? No / Yes\n")])])]),a("h4",{attrs:{id:"代码最终将运行在什么环境中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码最终将运行在什么环境中"}},[s._v("#")]),s._v(" 代码最终将运行在什么环境中?")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Where does you code run? "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 多选")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" Browser "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 浏览器环境")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" Node "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# node环境")]),s._v("\n")])])]),a("p",[s._v("根据运行环境，判断是否允许使用相应环境下的API，例如：")]),s._v(" "),a("ul",[a("li",[s._v("浏览器环境：window")]),s._v(" "),a("li",[s._v("node环境：process.cwd()")])]),s._v(" "),a("h4",{attrs:{id:"指定怎样定义项目的代码风格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定怎样定义项目的代码风格"}},[s._v("#")]),s._v(" 指定怎样定义项目的代码风格?")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("How would you like to define a style "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" your project?\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Use a popular style guide "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用一个市面上的主流风格")]),s._v("\n  Answer questions about your style "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过回答问题，形成一个风格")]),s._v("\n  Inspect your JavaScript file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据JS代码文件，推断代码风格 ")]),s._v("\n")])])]),a("p",[s._v("一般选择一个市面上的主流风格，这样项目如果有新的成员加入，他会很快适应这个风格。")]),s._v(" "),a("h4",{attrs:{id:"选择上面的use-a-popular-style-guide-eslint提供3个风格选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择上面的use-a-popular-style-guide-eslint提供3个风格选项"}},[s._v("#")]),s._v(" 选择上面的Use a popular style guide，ESLint提供3个风格选项：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Which style guide "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" you want to follow? \n  Airbnb: https://github.com/airbnb/javascript\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Standard: https://github.com/standard/standard\n  Google: https://github.com/google/eslint-config-google\n")])])]),a("p",[s._v("Airbnb和Google分别是这两个公司的具体编码规范。\nStandard是开源社区的编码规范，它最大的特点是不用在语句的末尾添加分号;。")]),s._v(" "),a("ul",[a("li",[s._v("这里选择Standard")])]),s._v(" "),a("h4",{attrs:{id:"指定配置文件的文件类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定配置文件的文件类型"}},[s._v("#")]),s._v(" 指定配置文件的文件类型")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("What "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" you want your config "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to be in? \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" JavaScript "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方便在配置文件中添加一些条件判断")]),s._v("\n  YAML\n  JSON\n")])])]),a("h4",{attrs:{id:"以上功能需要一些npm模块-这里提示是否安装它们"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以上功能需要一些npm模块-这里提示是否安装它们"}},[s._v("#")]),s._v(" 以上功能需要一些npm模块，这里提示是否安装它们?")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Would you like to "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" them now with npm?  No / Yes\n")])])]),a("br"),s._v("\n--------------------------------------------- 配置结束 ----------------------------------------------\n"),a("p",[s._v("一切完成之后，项目根目录下就会生成一个.eslintrc.js的配置文件。")]),s._v(" "),a("h2",{attrs:{id:"执行检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行检测"}},[s._v("#")]),s._v(" 执行检测")]),s._v(" "),a("p",[s._v("我们创建一个index.js 然后输入js代码来执行验证")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("npx eslint index.js\n")])])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("ul",[a("li",[s._v("ESLint 可以找出代码中的问题，问题包括：\n"),a("ul",[a("li",[s._v("语法错误")]),s._v(" "),a("li",[s._v("代码不合理")]),s._v(" "),a("li",[s._v("风格不统一")])])]),s._v(" "),a("li",[s._v("ESLint 可以自动修复代码中的绝大多数的问题 "),a("code",[s._v("--fix")]),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint-fix"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint --fix --ext .js,.tsx src"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);