(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{477:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ioc-di-aop概念解读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ioc-di-aop概念解读"}},[t._v("#")]),t._v(" IOC DI AOP概念解读")]),t._v(" "),a("h2",{attrs:{id:"ioc-inversion-of-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ioc-inversion-of-control"}},[t._v("#")]),t._v(" IOC - Inversion of Control")]),t._v(" "),a("blockquote",[a("p",[t._v("IOC控制反转， 控制权从应用程序转移到框架(如IOC容器)，是一种设计模式")])]),t._v(" "),a("p",[t._v("此处关键字为“反转”，如果不反转，依赖关系是怎么样呢?如果A要使用B的方法，需要在A里面引入B")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("initParams\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("当然了，除了这种最基本的引入之外，还有很多设计模式可以实现依赖引入，大同小异，不反转时，只有A主动获取B之后，才能用到B。这时C也用到了B，C又引用了A，如果后面加需求，B需要使用A的方法，这种重复引用，反复引用的现象是很恶心的。")]),t._v(" "),a("p",[t._v("反转做了什么事呢? A要调用B的话，A并不需要主动获取B，而是由其它人自动将B送上门来。这个“其它人”就是容器。描述了依赖关系，在使用时容器来做管理。")]),t._v(" "),a("h2",{attrs:{id:"di-dependency-injection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#di-dependency-injection"}},[t._v("#")]),t._v(" DI - Dependency Injection")]),t._v(" "),a("blockquote",[a("p",[t._v("DI依赖注入，将相互依赖的对象分离，在配置中描述依赖关系，这些关系在应用时才被建立。")])]),t._v(" "),a("p",[t._v("如果IOC是一种设计模式，或者叫思想，那么DI是实现这种思想的一种方式。同时也可以通过观察者模式、模板方法模式等实现IOC，咱们拿DI举例。")]),t._v(" "),a("p",[t._v("awilix是一个DI框架，用它在应用中实现IOC。创建容器对依赖关系做管理。")]),t._v(" "),a("p",[t._v("非IOC架构中，应用程序来决定引用哪些依赖，然后主动实例化;现在我们把这些工作交给IOC容器来完成，整个依赖对象的实例化、生命周期全部由容器接管,与业务代码高度解耦。")]),t._v(" "),a("h2",{attrs:{id:"aop面向切面编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aop面向切面编程"}},[t._v("#")]),t._v(" AOP面向切面编程")]),t._v(" "),a("blockquote",[a("p",[t._v("AOP是一种编程范式，跟面向过程、面向对象、函数式等编程范式是同等概念。是指在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想")])]),t._v(" "),a("p",[t._v("举个栗子:")]),t._v(" "),a("p",[t._v("日志埋点、权限校验等侵入性比较强，又比较完整的模块，可能需要在不少地方调用该模块的方法，按面向对象思想，哪里用哪里引，这个方法遍地开花，不好维护，此时面向切面编程就很好解决了该问题。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("logData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Auth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("userType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"无权限"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRoute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("newGetRoute")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Auth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRoute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some log'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面的案例简单描述了log和Auth对getRoute方法的侵入，事实上，Auth和log此时变成了该方法的两个pre和post的 生命周期函数，在真正执行前后做了你想做的事情。redux里面到处都是")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("总而言之:抛开业务类型和项目规模谈架构思想都是耍流氓，用各种骚操作完成todoList，除了学习需要就是无病呻吟。学习架构思想时又不能让业务喧宾夺主，只能用该思想完成较为简单的业务逻辑，咱们去体会，当你需要时你就知道了。引用张小龙说微信新功能的表述:")]),t._v(" "),a("blockquote",[a("p",[t._v("“你未看此花时，此花与汝同归于寂;你来看此花时，则此花颜色一时明白起来”;--王阳明")])]),t._v(" "),a("p",[t._v("微信有很多强大的功能不去大势运营，不让他们打扰用户的的使用，当你需要用到时，发现他在。我们学架构、学思想也是这样，拥有这个能力后，不一定处处使用，当需要时，自然使出来，他就在那里。 最后祝大家在前端道路上越走越好。")])])}),[],!1,null,null,null);s.default=e.exports}}]);