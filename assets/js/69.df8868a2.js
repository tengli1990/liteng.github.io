(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{497:function(a,t,s){"use strict";s.r(t);var e=s(14),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"核心原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心原理"}},[a._v("#")]),a._v(" 核心原理")]),a._v(" "),s("ul",[s("li",[a._v("entry")]),a._v(" "),s("li",[a._v("module")]),a._v(" "),s("li",[a._v("plugins")]),a._v(" "),s("li",[a._v("Webpack 运行流程")])]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("文件指纹区别 & watch")]),a._v(" "),s("p",[a._v("Hash:和整个项目目的相关，只要项目文件有修改，整个项目构建的hash值就会更改。\nChunkhash: 和 webpack 打包的chunk有关，不同的entry 会生成不同的chunkhash值\nContenthash：根据文件内容定义hash，文件内容不变，则contenthash不变")]),a._v(" "),s("p",[a._v("watch轮训判断文件的最后编辑时间是否变化，某个文件发生变化并不会立刻告诉监听者，而是先缓存起来，等aggregateTimeout。")])]),a._v(" "),s("h2",{attrs:{id:"走进webpack入口文件-entry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#走进webpack入口文件-entry"}},[a._v("#")]),a._v(" 走进webpack入口文件-Entry")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[a._v(".+\\/([a-zA-Z]+-[a-zA-Z]+)(\\.entry\\.js)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[a._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" entryKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" RegExp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("$1\n   _entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("entryKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" item\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" entryKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"开启对webpack的多核支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开启对webpack的多核支持"}},[a._v("#")]),a._v(" 开启对webpack的多核支持")]),a._v(" "),s("p",[a._v("1.webpack是基于NodeJs的，所以开启多核编译 - Open multi core support")]),a._v(" "),s("div",{staticClass:"language-Javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" HappyPack "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'happypack'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" os "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'os'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 开辟一个线程池")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" happyThreadPoll "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" HappyPack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ThreadPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("size")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cpus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("plugins "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HappyPack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'babel-application-js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("threadPool")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" happyThreadPool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("verbose")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("loaders")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("loader")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'babel-loader'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("options")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("省略\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n")])])]),s("h3",{attrs:{id:"loader原理分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loader原理分析"}},[a._v("#")]),a._v(" Loader原理分析")]),a._v(" "),s("p",[s("img",{attrs:{src:"/webpack/webpack-loader.jpg",alt:"img"}})]),a._v(" "),s("h3",{attrs:{id:"如何开发一个自己的loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何开发一个自己的loader"}},[a._v("#")]),a._v(" 如何开发一个自己的loader")]),a._v(" "),s("p",[a._v("1、use: ['bar-loader', 'foo-loader'] 时，loader 是以相反的顺序执行的")]),a._v(" "),s("p",[a._v("2、最后的 loader 最早调用，传入原始的资源内容(可能是代码，也可能是二进制文件，用 buffer 处理)第一个 loader 最后调用，期望返回是 JS 代码和 sourcemap 对象(可选)中间 的 loader 执行时，传入的是上一个 loader 执行的结果")]),a._v(" "),s("p",[a._v("3、多个 loader 时遵循这样的执行顺序，但对于大多数单个 loader 来说无须感知这一点，只负责好处理接受的内容就好。")]),a._v(" "),s("p",[a._v("4、还有一个场景是 loader 中的异步处理。有一些 loader 在执行过程中可能依赖于外部 I/O 的结果，导致它必须使用异步的方式来处理，这个使用需要在 loader 执行时使用 "),s("code",[a._v("this.async()")]),a._v(" 来标识该 loader 是异步处理的，然后使用 "),s("code",[a._v("this.callback()")]),a._v(" 来返回 loader 处理结果。")]),a._v(" "),s("h3",{attrs:{id:"ast静态语法分析树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ast静态语法分析树"}},[a._v("#")]),a._v(" AST静态语法分析树")]),a._v(" "),s("p",[a._v("在计算机科学中，抽象语法树(abstract syntax tree 或者缩写为 AST)，或者语法树(syntax tree)，是源 代码的抽象语法结构的树状表现形式，这里特指编程语言的源代码。树上的每个节点都表示源代码中的一种结构。之所以说语法是「抽象」的，是因为这里的语法并不会表示出真实语法中出现的每个细节。")]),a._v(" "),s("p",[a._v("Webpack提供的一个很大的便利就是能将所有资源都整合成模块，不仅仅是js文件。所以需要一些loader，比如url-loader等等来让我们可以直接在源文件中引用各类资源。最后调用 acorn(Esprima) 解析经 loader 处理后的源文件生成抽象语法树 AST")]),a._v(" "),s("ul",[s("li",[a._v("type:描述该语句的类型 --变量声明语句")]),a._v(" "),s("li",[a._v("kind:变量声明的关键字 -- var")]),a._v(" "),s("li",[a._v("declaration: 声明的内容数组，里面的每一项也是一个对象\n"),s("ul",[s("li",[a._v("type: 描述该语句的类型")]),a._v(" "),s("li",[a._v("id: 描述变量名称的对象\n"),s("ul",[s("li",[a._v("type:定义")]),a._v(" "),s("li",[a._v("name: 是变量的名字")])])]),a._v(" "),s("li",[a._v("init: 初始化变量值得对象\n"),s("ul",[s("li",[a._v("type: 类型")]),a._v(" "),s("li",[a._v('value: 值 "is tree" 不带引号')]),a._v(" "),s("li",[a._v('row: ""is tree"" 带引号')])])])])])]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("\n")])])]),s("h2",{attrs:{id:"你不知道的module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你不知道的module"}},[a._v("#")]),a._v(" 你不知道的module")]),a._v(" "),s("h2",{attrs:{id:"更好的应用plugins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更好的应用plugins"}},[a._v("#")]),a._v(" 更好的应用plugins")]),a._v(" "),s("h3",{attrs:{id:"如何-编写自己的webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何-编写自己的webpack"}},[a._v("#")]),a._v(" 如何 编写自己的webpack")]),a._v(" "),s("img",{staticStyle:{display:"block",margin:"20px auto"},attrs:{src:"/webpack/webpack-plugins.png",width:"500"}}),a._v(" "),s("p",[s("strong",[a._v("webpack实现插件机制的⼤大体⽅方式是:")])]),a._v(" "),s("ul",[s("li",[a._v("「创建」—— webpack在其内部对象上创建各种钩⼦子;")]),a._v(" "),s("li",[a._v("「注册」—— 插件将⾃自⼰己的⽅方法注册到对应钩⼦子上，交给webpack;")]),a._v(" "),s("li",[a._v("「调⽤用」—— webpack编译过程中，会适时地触发相应钩⼦子，因此也 就触发了了插件的⽅方法。")])]),a._v(" "),s("p",[a._v("plugins.js")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" pluginName "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ConsoleLogOnBuildWebpackPlugin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ConsoleLogOnBuildWebpackPlugin")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("compiler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 在 compiler的hooks中注册一个方法，当执行到该阶段时会调用 compiler.hooks.run.tap(pluginName, compilation => {")]),a._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"The webpack build process is starting!!!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("webpack.config.js")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" ConsoleLogOnBuildWebpackPlugin "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./plugins'")]),a._v("\n  module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("plugins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ConsoleLogOnBuildWebpackPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"tapable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tapable"}},[a._v("#")]),a._v(" Tapable")]),a._v(" "),s("p",[a._v("webpack 利用了 "),s("a",{attrs:{href:"https://github.com/webpack/tapable",target:"_blank",rel:"noopener noreferrer"}},[a._v("tapable"),s("OutboundLink")],1),a._v(" 这个库来协助实现对于整个 构建流程各个步骤的控制。 tapable 定义了主要构建流程后，使用 tapable 这个库添加了各种各样的 钩子方法来将 webpack 扩展至功能十分丰富,这就是plugin 的机制。")]),a._v(" "),s("p",[s("img",{attrs:{src:"/webpack/webpack-tapable.png",alt:"img"}})]),a._v(" "),s("h4",{attrs:{id:"_1-什么是tapable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是tapable"}},[a._v("#")]),a._v(" 1.什么是Tapable?")]),a._v(" "),s("p",[a._v("webpack核心使用Tapable 来实现插件(plugins)的binding和applying.Tapable是一个用于事件发布订阅执行的插件架构。Tapable就是webpack用来创建钩子的库。")]),a._v(" "),s("h4",{attrs:{id:"_2-打开webpack-package-json-main-webpack-js-一起分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-打开webpack-package-json-main-webpack-js-一起分析"}},[a._v("#")]),a._v(" 2.打开webpack->package.json->main -> webpack.js 一起分析~")]),a._v(" "),s("h4",{attrs:{id:"_3-创建流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建流程"}},[a._v("#")]),a._v(" 3.创建流程")]),a._v(" "),s("p",[s("code",[a._v("Compiler")]),a._v(" ->"),s("br"),a._v(" "),s("code",[a._v("调用 compiler.run 开始构建")]),a._v(" ->"),s("br"),a._v(" "),s("code",[a._v("创建 Compilation")]),a._v(" ->"),s("br"),a._v(" "),s("code",[a._v("基于配置开始创建 Chunk")]),a._v(" ->"),s("br"),a._v(" "),s("code",[a._v("使用 Parser 从 Chunk 开始解析依赖")]),a._v(" ->"),s("br"),a._v(" "),s("code",[a._v("使用 Module 和 Dependency 管理代码模块相互关系")]),a._v(" ->"),s("br"),a._v(" "),s("code",[a._v("使用 Template 基于 Compilation 的数据生成结果代码")])]),a._v(" "),s("p",[a._v("1.事件钩子会有不同的类型 SyncBailHook，AsyncSeriesHook，SyncHook等。")]),a._v(" "),s("p",[a._v("2.如果是异步的事件钩子，那么可以使用 tapPromise 或者 tapAsync 来注册事件函数， tapPromise 要求方法返回 Promise 以便处理异步，而 tapAsync 则是需要用 callback 来返回结 果。")]),a._v(" "),s("p",[a._v("3.compiler.hooks.done.tapPromise('PluginName', (stats) => { return new Promise((resolve, reject) => {\n// 处理promise的返回结果 reject(err) : resolve() })")]),a._v(" "),s("p",[a._v("4.compiler.hooks.done.tapAsync('PluginName', (stats, callback) => { callback(err)) })")]),a._v(" "),s("p",[a._v("5.除了同步和异步的，名称带有 parallel 的，注册的事件函数会并行调用，名称带有 bail 的，注册的事件函数会被顺序调用，直至一个处理方法有返回值名称带有 waterfall 的，每个 注册的事件函数，会将上一个方法的返回结果作为输入参数。有一些类型是可以结合到一起 的，如 AsyncParallelBailHook，这样它就具备了更加多样化的特性。")]),a._v(" "),s("h2",{attrs:{id:"webpack整体运行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack整体运行流程"}},[a._v("#")]),a._v(" Webpack整体运行流程")]),a._v(" "),s("p",[a._v("webpack 本质上就是一个 JS Module Bundler，用于将多个代码模块进行打包。bundler 从一个构 建入口出发，解析代码，分析出代码模块依赖关系，然后将依赖的代码模块组合在一起，在 JavaScript bundler 中，还需要提供一些胶水代码让多个代码模块可以协同工作，相互引用。下边会 举一些简单的例子来说明一下这几个关键的部分是怎么工作的。")]),a._v(" "),s("p",[a._v("entry.js")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" bar "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./bar.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 依赖 ./bar.js 模块  ")]),a._v("\n")])])]),s("p",[a._v("bar.js")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./foo.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 依赖 ./foo.js 模块")]),a._v("\n")])])]),s("p",[a._v("递归下去，直至没有更多的依赖模块，最终形成一颗模块依赖树。")]),a._v(" "),s("p",[a._v("分析出依赖关系后，webpack 会利用 JavaScript Function 的特性提供一些代码来将各个模块整 合到一起，即是将每一个模块包装成一个 JS Function，提供一个引用依赖模块的方法，如下面例子 中的 "),s("strong",[a._v("webpack__require")]),a._v("，这样做，既可以避免变量相互干扰，又能够有效控制执行顺序。")]),a._v(" "),s("p",[a._v("分别将各个依赖模块的代码用 modules 的方式组织起来打包成一个文件")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// entry.js")]),a._v("\nmodules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./entry.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" bar "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("__webpack__require__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./bar.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// bar.js")]),a._v("\nmodules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./bar.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("__webpack__require__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./foo.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// foo.js")]),a._v("\nmodules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./foo.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//... ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"构建流程的几个步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建流程的几个步骤"}},[a._v("#")]),a._v(" 构建流程的几个步骤")]),a._v(" "),s("p",[s("img",{attrs:{src:"/webpack/webpack-run.jpg",alt:"img"}})]),a._v(" "),s("h4",{attrs:{id:"创建compiler-调用compiler-run方法开始构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建compiler-调用compiler-run方法开始构建"}},[a._v("#")]),a._v(" 创建Compiler，调用Compiler.run方法开始构建")]),a._v(" "),s("ul",[s("li",[a._v("Compiler webpack 的运行入口，compiler 对象代表了完整的 webpack 环境配置。这个对象 在启动 webpack 时被一次性建立，并配置好所有可操作的设置，包括 options，loader 和 plugin。当在 webpack 环境中应用一个插件时，插件将收到此 compiler 对象的引用，可以使用 它来访问 webpack 的主环境。")])]),a._v(" "),s("h4",{attrs:{id:"创建compilation实例-基于配置开始创建chunk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建compilation实例-基于配置开始创建chunk"}},[a._v("#")]),a._v(" 创建Compilation实例，基于配置开始创建Chunk")]),a._v(" "),s("ul",[s("li",[a._v("Compilation 对象代表了一次资源版本构建。当运行 webpack 开发环境中间件时，每当检 测到一个文件变化，就会创建一个新的 compilation，从而生成一组新的编译资源。一个 compilation 对象表现了当前的模块资源、编译生成资源、变化的文件、以及被跟踪依赖的状 态信息。compilation 对象也提供了很多关键步骤的回调，以供插件做自定义处理时选择使 用。")])]),a._v(" "),s("h4",{attrs:{id:"使用parser从chunk开始解析依赖-使用module和dependency-管理代码模块相互关系。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用parser从chunk开始解析依赖-使用module和dependency-管理代码模块相互关系。"}},[a._v("#")]),a._v(" 使用Parser从Chunk开始解析依赖，使用Module和Dependency 管理代码模块相互关系。")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("Chunk，即用于表示 chunk 的类，对于构建时需要的 chunk 对象由 Compilation 创建后保存 管理(webpack中最核心的负责编译的Compiler和负责创建bundles的Compilation都是Tapable的实 例)")])]),a._v(" "),s("li",[s("p",[a._v("Module(https://github.com/webpack/webpack/blob/master/lib/Module.js)，用于表示代码 模块的基础类，衍生出很多子类用于处理不同的情况(https://github.com/webpack/webpack/ blob/master/lib/NormalModule.js)关于代码模块的所有信息都会存在 Module 实例中，例如 dependencies 记录代码模块的依赖等")])]),a._v(" "),s("li",[s("p",[a._v("当一个 Module 实例被创建后，比较重要的一步是执行 compilation.buildModule 这个方法，它 会调用 Module 实例的 build 方法来创建 Module 实例需要的一些东西，然后调用自身的 runLoaders 方法。runLoaders :loader-runner(https://github.com/webpack/loader-runner)，执 行对应的 loaders，将代码源码内容一一交由配置中指定的 loader 处理后，再把处理的结果保 存起来。")])]),a._v(" "),s("li",[s("p",[a._v("Parser，其中相对复杂的一个部分，基于 acorn 来分析 AST 语法树，解析出代码模块的依赖")])]),a._v(" "),s("li",[s("p",[a._v("Dependency，解析时用于保存代码模块对应的依赖使用的对象。 Module 实例的 build 方法 在执行完对应的 loader时，处理完模块代码自身的转换后，继续调用 Parser 的实例来解析自 身依赖的模块，解析后的结果存放在 module.dependencies 中，首先保存的是依赖的路径，后 续会经由 compilation.processModuleDependencies 方法，再来处理各个依赖模块，递归地去建立 整个依赖。")])])]),a._v(" "),s("h4",{attrs:{id:"使用template基于compilation的数据生成结果代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用template基于compilation的数据生成结果代码"}},[a._v("#")]),a._v(" 使用Template基于Compilation的数据生成结果代码")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("Template，生成最终代码要使用到的代码模板，像上述提到的胶水代码就是用对应的 Template 来生成。")])]),a._v(" "),s("li",[s("p",[a._v("Template 基础类:"),s("a",{attrs:{href:"https://github.com/webpack/webpack/blob/master/lib/Template.js",target:"_blank",rel:"noopener noreferrer"}},[a._v("lib/Template.js"),s("OutboundLink")],1)])]),a._v(" "),s("li",[s("p",[a._v("常用的主要 Template 类:"),s("a",{attrs:{href:"https://github.com/webpack/webpack/blob/master/lib/MainTemplate.js",target:"_blank",rel:"noopener noreferrer"}},[a._v("lib/MainTemplate.js"),s("OutboundLink")],1)])])]),a._v(" "),s("h3",{attrs:{id:"给babel编写插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给babel编写插件"}},[a._v("#")]),a._v(" 给babel编写插件")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/jamiebuilds/babel-handbook/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/jamiebuilds/babel-handbook/"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);